# Project language
language: php

# Allows use container-based infrastructure
sudo: false
#sudo: required
#dist: trusty

# Start mysql service
services:
  - mysql

# Cache composer packages so "composer install" is faster
cache:
    yarn: true
    directories:
        - $HOME/.composer/cache/files
        - $HOME/.cache/pip

# Versions of PHP to test against
php:

#    - "7.1"
    - "7.2"
    
# Define an environment variable
env:
  - SYLIUS_VERSION=""
#  - SYLIUS_VERSION="1.0"

before_install:
# Update composer
  - composer self-update
# Install Yarn
  - yarn 
# Increase memory limit to 4GB  
  - phpenv config-rm xdebug.ini
  - phpenv config-add build/x_memory.ini
#  - phpenv config-add build/x_errors.ini
  - php -ini | grep memory_limit  

# Install composer dependencies,
# Create database, schema and fixtures
install:   
    - composer create-project sylius/sylius-standard sylius $SYLIUS_VERSION --prefer-dist
    - cd sylius
    
    - echo "Install Splash Bundles"
    - cp  ../build/.env.dist ".env" 
    - cat ../build/config_splash.yml    >> config/config.yml
    - cat ../build/routing_splash.yml   >> config/routing.yml
    - cp  ../build/phpunit.xml.dist phpunit.xml.dist
    - composer require splash/phpcore:dev-master splash/php-bundle:dev-master splash/sylius-bundle:dev-master --no-interaction --prefer-dist --no-scripts
    
    - echo "Configuring Splash Bundles"
    
#    # PHP > 7.1    
#    - if [[ ${TRAVIS_PHP_VERSION:0:3} > "7.1" ]]; then cp ../build/.en.dist .env; fi 
    
#    - cp ../build/parameters.yml.dist app/config/parameters.yml
#    - cp ../build/autoload.php app/autoload.php
    
    
    - echo "Install Sylius"
    - php bin/console sylius:install --env=test --no-interaction --no-debug
    - php bin/console sylius:fixtures:load --env=test --no-interaction --no-debug

#    - echo "Enable Splash Bundles"
#    - cp ../build/AppKernel.php app/AppKernel.php
    
    - echo "Start Web Srever"
#    - php bin/console server:start --env=test
    - php bin/console server:run --env=test
    - php bin/console server:start

# Run script
script:
  - php vendor/bin/phpunit

# After a build, send email notification with the build results
notifications:
  email:         
    on_success: never # default: change
    on_failure: never # default: always